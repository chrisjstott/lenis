{"version":3,"sources":["../packages/core/index.ts","../package.json","../packages/core/src/maths.ts","../packages/core/src/animate.ts","../packages/core/src/debounce.ts","../packages/core/src/dimensions.ts","../packages/core/src/emitter.ts","../packages/core/src/virtual-scroll.ts","../packages/core/src/lenis.ts"],"sourcesContent":["// This file serves as an entry point for the package\nexport { Lenis as default } from './src/lenis'\nexport * from './src/types'\n","{\n  \"name\": \"lenis\",\n  \"version\": \"1.1.13\",\n  \"type\": \"module\",\n  \"sideEffects\": false,\n  \"author\": \"darkroom.engineering\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/darkroomengineering/lenis.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/darkroomengineering/lenis/issues\"\n  },\n  \"homepage\": \"https://github.com/darkroomengineering/lenis\",\n  \"funding\": {\n    \"type\": \"github\",\n    \"url\": \"https://github.com/sponsors/darkroomengineering\"\n  },\n  \"keywords\": [\n    \"scroll\",\n    \"smooth\",\n    \"lenis\",\n    \"react\",\n    \"vue\"\n  ],\n  \"scripts\": {\n    \"build\": \"pnpm build:core && pnpm build:all\",\n    \"build:core\": \"tsup --config tsup.core.ts\",\n    \"build:all\": \"tsup\",\n    \"dev\": \"pnpm run -w --parallel /^dev.*/\",\n    \"dev:build\": \"tsup --watch\",\n    \"dev:playground\": \"pnpm --filter playground dev\",\n    \"readme\": \"node scripts/update-readme.js\",\n    \"version:dev\": \"npm version prerelease --preid dev --force\",\n    \"version:patch\": \"npm version patch --force\",\n    \"version:minor\": \"npm version minor --force\",\n    \"version:major\": \"npm version major --force\",\n    \"postversion\": \"pnpm build && pnpm readme\",\n    \"publish\": \"npm publish\",\n    \"publish:dev\": \"npm publish --tag dev\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"dependencies\": {\n    \"@darkroom.engineering/tempus\": \"^0.0.46\"\n  },\n  \"devDependencies\": {\n    \"tsup\": \"^8.2.4\",\n    \"typescript\": \"^5.4.5\"\n  },\n  \"peerDependencies\": {\n    \"react\": \">=17.0.0\",\n    \"vue\": \">=3.0.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"react\": {\n      \"optional\": true\n    },\n    \"vue\": {\n      \"optional\": true\n    }\n  },\n  \"unpkg\": \"./dist/lenis.mjs\",\n  \"main\": \"./dist/lenis.mjs\",\n  \"module\": \"./dist/lenis.mjs\",\n  \"types\": \"./dist/lenis.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/lenis.d.ts\",\n      \"default\": \"./dist/lenis.mjs\"\n    },\n    \"./dist/*\": \"./dist/*\",\n    \"./react\": {\n      \"types\": \"./dist/lenis-react.d.ts\",\n      \"default\": \"./dist/lenis-react.mjs\"\n    },\n    \"./snap\": {\n      \"types\": \"./dist/lenis-snap.d.ts\",\n      \"default\": \"./dist/lenis-snap.mjs\"\n    },\n    \"./vue\": {\n      \"types\": \"./dist/lenis-vue.d.ts\",\n      \"default\": \"./dist/lenis-vue.mjs\"\n    }\n  }\n}\n","/**\n * Clamp a value between a minimum and maximum value\n *\n * @param min Minimum value\n * @param input Value to clamp\n * @param max Maximum value\n * @returns Clamped value\n */\nexport function clamp(min: number, input: number, max: number) {\n  return Math.max(min, Math.min(input, max))\n}\n\n/**\n * Truncate a floating-point number to a specified number of decimal places\n *\n * @param value Value to truncate\n * @param decimals Number of decimal places to truncate to\n * @returns Truncated value\n */\nexport function truncate(value: number, decimals = 0) {\n  return parseFloat(value.toFixed(decimals))\n}\n\n/**\n *  Linearly interpolate between two values using an amount (0 <= t <= 1)\n *\n * @param x First value\n * @param y Second value\n * @param t Amount to interpolate (0 <= t <= 1)\n * @returns Interpolated value\n */\nexport function lerp(x: number, y: number, t: number) {\n  return (1 - t) * x + t * y\n}\n\n/**\n * Damp a value over time using a damping factor\n * {@link http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/}\n *\n * @param x Initial value\n * @param y Target value\n * @param lambda Damping factor\n * @param dt Time elapsed since the last update\n * @returns Damped value\n */\nexport function damp(x: number, y: number, lambda: number, deltaTime: number) {\n  return lerp(x, y, 1 - Math.exp(-lambda * deltaTime))\n}\n\n/**\n * Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\n * {@link https://anguscroll.com/just/just-modulo}\n *\n * @param n Dividend\n * @param d Divisor\n * @returns Modulo\n */\nexport function modulo(n: number, d: number) {\n  return ((n % d) + d) % d\n}\n","import { clamp, damp } from './maths'\nimport type { EasingFunction, FromToOptions, OnUpdateCallback } from './types'\n\n/**\n * Animate class to handle value animations with lerping or easing\n *\n * @example\n * const animate = new Animate()\n * animate.fromTo(0, 100, { duration: 1, easing: (t) => t })\n * animate.advance(0.5) // 50\n */\nexport class Animate {\n  isRunning = false\n  value = 0\n  from = 0\n  to = 0\n  currentTime = 0\n\n  // These are instanciated in the fromTo method\n  lerp?: number\n  duration?: number\n  easing?: EasingFunction\n  onUpdate?: OnUpdateCallback\n\n  /**\n   * Advance the animation by the given delta time\n   *\n   * @param deltaTime - The time in seconds to advance the animation\n   */\n  advance(deltaTime: number) {\n    if (!this.isRunning) return\n\n    let completed = false\n\n    if (this.duration && this.easing) {\n      this.currentTime += deltaTime\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\n\n      completed = linearProgress >= 1\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\n      this.value = this.from + (this.to - this.from) * easedProgress\n    } else if (this.lerp) {\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to\n        completed = true\n      }\n    } else {\n      // If no easing or lerp, just jump to the end value\n      this.value = this.to\n      completed = true\n    }\n\n    if (completed) {\n      this.stop()\n    }\n\n    // Call the onUpdate callback with the current value and completed status\n    this.onUpdate?.(this.value, completed)\n  }\n\n  /** Stop the animation */\n  stop() {\n    this.isRunning = false\n  }\n\n  /**\n   * Set up the animation from a starting value to an ending value\n   * with optional parameters for lerping, duration, easing, and onUpdate callback\n   *\n   * @param from - The starting value\n   * @param to - The ending value\n   * @param options - Options for the animation\n   */\n  fromTo(\n    from: number,\n    to: number,\n    { lerp, duration, easing, onStart, onUpdate }: FromToOptions\n  ) {\n    this.from = this.value = from\n    this.to = to\n    this.lerp = lerp\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n\n    onStart?.()\n    this.onUpdate = onUpdate\n  }\n}\n","export function debounce<CB extends (...args: any[]) => void>(\n  callback: CB,\n  delay: number\n) {\n  let timer: number | undefined\n  return function <T>(this: T, ...args: Parameters<typeof callback>) {\n    let context = this\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      timer = undefined\n      callback.apply(context, args)\n    }, delay)\n  }\n}\n","import { debounce } from './debounce'\n\n/**\n * Dimensions class to handle the size of the content and wrapper\n *\n * @example\n * const dimensions = new Dimensions(wrapper, content)\n * dimensions.on('resize', (e) => {\n *   console.log(e.width, e.height)\n * })\n */\nexport class Dimensions {\n  width = 0\n  height = 0\n  scrollHeight = 0\n  scrollWidth = 0\n\n  // These are instanciated in the constructor as they need information from the options\n  private debouncedResize?: (...args: unknown[]) => void\n  private wrapperResizeObserver?: ResizeObserver\n  private contentResizeObserver?: ResizeObserver\n\n  constructor(\n    private wrapper: HTMLElement | Window,\n    private content: HTMLElement,\n    { autoResize = true, debounce: debounceValue = 250 } = {}\n  ) {\n    if (autoResize) {\n      this.debouncedResize = debounce(this.resize, debounceValue)\n\n      if (this.wrapper instanceof Window) {\n        window.addEventListener('resize', this.debouncedResize, false)\n      } else {\n        this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize)\n        this.wrapperResizeObserver.observe(this.wrapper)\n      }\n\n      this.contentResizeObserver = new ResizeObserver(this.debouncedResize)\n      this.contentResizeObserver.observe(this.content)\n    }\n\n    this.resize()\n  }\n\n  destroy() {\n    this.wrapperResizeObserver?.disconnect()\n    this.contentResizeObserver?.disconnect()\n\n    if (this.wrapper === window && this.debouncedResize) {\n      window.removeEventListener('resize', this.debouncedResize, false)\n    }\n  }\n\n  resize = () => {\n    this.onWrapperResize()\n    this.onContentResize()\n  }\n\n  onWrapperResize = () => {\n    if (this.wrapper instanceof Window) {\n      this.width = window.innerWidth\n      this.height = window.innerHeight\n    } else {\n      this.width = this.wrapper.clientWidth\n      this.height = this.wrapper.clientHeight\n    }\n  }\n\n  onContentResize = () => {\n    if (this.wrapper instanceof Window) {\n      this.scrollHeight = this.content.scrollHeight\n      this.scrollWidth = this.content.scrollWidth\n    } else {\n      this.scrollHeight = this.wrapper.scrollHeight\n      this.scrollWidth = this.wrapper.scrollWidth\n    }\n  }\n\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height,\n    }\n  }\n}\n","/**\n * Emitter class to handle events\n * @example\n * const emitter = new Emitter()\n * emitter.on('event', (data) => {\n *   console.log(data)\n * })\n * emitter.emit('event', 'data')\n */\nexport class Emitter {\n  private events: Record<\n    string,\n    Array<(...args: unknown[]) => void> | undefined\n  > = {}\n\n  /**\n   * Emit an event with the given data\n   * @param event Event name\n   * @param args Data to pass to the event handlers\n   */\n  emit(event: string, ...args: unknown[]) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i]?.(...args)\n    }\n  }\n\n  /**\n   * Add a callback to the event\n   * @param event Event name\n   * @param cb Callback function\n   * @returns Unsubscribe function\n   */\n  on<CB extends (...args: any[]) => void>(event: string, cb: CB) {\n    // Add the callback to the event's callback list, or create a new list with the callback\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n\n    // Return an unsubscribe function\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\n    }\n  }\n\n  /**\n   * Remove a callback from the event\n   * @param event Event name\n   * @param callback Callback function\n   */\n  off<CB extends (...args: any[]) => void>(event: string, callback: CB) {\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\n  }\n\n  /**\n   * Remove all event listeners and clean up\n   */\n  destroy() {\n    this.events = {}\n  }\n}\n","import { Emitter } from './emitter'\nimport type { VirtualScrollCallback } from './types'\n\nconst LINE_HEIGHT = 100 / 6\nconst listenerOptions: AddEventListenerOptions = { passive: false }\n\nexport class VirtualScroll {\n  touchStart = {\n    x: 0,\n    y: 0,\n  }\n  lastDelta = {\n    x: 0,\n    y: 0,\n  }\n  window = {\n    width: 0,\n    height: 0,\n  }\n  private emitter = new Emitter()\n\n  constructor(\n    private element: HTMLElement,\n    private options = { wheelMultiplier: 1, touchMultiplier: 1 }\n  ) {\n    window.addEventListener('resize', this.onWindowResize, false)\n    this.onWindowResize()\n\n    this.element.addEventListener('wheel', this.onWheel, listenerOptions)\n    this.element.addEventListener(\n      'touchstart',\n      this.onTouchStart,\n      listenerOptions\n    )\n    this.element.addEventListener(\n      'touchmove',\n      this.onTouchMove,\n      listenerOptions\n    )\n    this.element.addEventListener('touchend', this.onTouchEnd, listenerOptions)\n  }\n\n  /**\n   * Add an event listener for the given event and callback\n   *\n   * @param event Event name\n   * @param callback Callback function\n   */\n  on(event: string, callback: VirtualScrollCallback) {\n    return this.emitter.on(event, callback)\n  }\n\n  /** Remove all event listeners and clean up */\n  destroy() {\n    this.emitter.destroy()\n\n    window.removeEventListener('resize', this.onWindowResize, false)\n\n    this.element.removeEventListener('wheel', this.onWheel, listenerOptions)\n    this.element.removeEventListener(\n      'touchstart',\n      this.onTouchStart,\n      listenerOptions\n    )\n    this.element.removeEventListener(\n      'touchmove',\n      this.onTouchMove,\n      listenerOptions\n    )\n    this.element.removeEventListener(\n      'touchend',\n      this.onTouchEnd,\n      listenerOptions\n    )\n  }\n\n  /**\n   * Event handler for 'touchstart' event\n   *\n   * @param event Touch event\n   */\n  onTouchStart = (event: TouchEvent) => {\n    // @ts-expect-error - event.targetTouches is not defined\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: 0,\n      y: 0,\n    }\n\n    this.emitter.emit('scroll', {\n      deltaX: 0,\n      deltaY: 0,\n      event,\n    })\n  }\n\n  /** Event handler for 'touchmove' event */\n  onTouchMove = (event: TouchEvent) => {\n    // @ts-expect-error - event.targetTouches is not defined\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    const deltaX = -(clientX - this.touchStart.x) * this.options.touchMultiplier\n    const deltaY = -(clientY - this.touchStart.y) * this.options.touchMultiplier\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: deltaX,\n      y: deltaY,\n    }\n\n    this.emitter.emit('scroll', {\n      deltaX,\n      deltaY,\n      event,\n    })\n  }\n\n  onTouchEnd = (event: TouchEvent) => {\n    this.emitter.emit('scroll', {\n      deltaX: this.lastDelta.x,\n      deltaY: this.lastDelta.y,\n      event,\n    })\n  }\n\n  /** Event handler for 'wheel' event */\n  onWheel = (event: WheelEvent) => {\n    let { deltaX, deltaY, deltaMode } = event\n\n    const multiplierX =\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.width : 1\n    const multiplierY =\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.height : 1\n\n    deltaX *= multiplierX\n    deltaY *= multiplierY\n\n    deltaX *= this.options.wheelMultiplier\n    deltaY *= this.options.wheelMultiplier\n\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\n  }\n\n  onWindowResize = () => {\n    this.window = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    }\n  }\n}\n","import { version } from '../../../package.json'\nimport { Animate } from './animate'\nimport { Dimensions } from './dimensions'\nimport { Emitter } from './emitter'\nimport { clamp, modulo } from './maths'\nimport type {\n  LenisEvent,\n  LenisOptions,\n  ScrollCallback,\n  Scrolling,\n  ScrollToOptions,\n  UserData,\n  VirtualScrollCallback,\n  VirtualScrollData,\n} from './types'\nimport { VirtualScroll } from './virtual-scroll'\n\n// Technical explanation\n// - listen to 'wheel' events\n// - prevent 'wheel' event to prevent scroll\n// - normalize wheel delta\n// - add delta to targetScroll\n// - animate scroll to targetScroll (smooth context)\n// - if animation is not running, listen to 'scroll' events (native context)\n\ntype OptionalPick<T, F extends keyof T> = Omit<T, F> & Partial<Pick<T, F>>\n\nexport class Lenis {\n  private _isScrolling: Scrolling = false // true when scroll is animating\n  private _isStopped = false // true if user should not be able to scroll - enable/disable programmatically\n  private _isLocked = false // same as isStopped but enabled/disabled when scroll reaches target\n  private _preventNextNativeScrollEvent = false\n  private _resetVelocityTimeout: number | null = null\n\n  /**\n   * Whether or not the user is touching the screen\n   */\n  isTouching?: boolean\n  /**\n   * The time in ms since the lenis instance was created\n   */\n  time = 0\n  /**\n   * User data that will be forwarded through the scroll event\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   userData: {\n   *     foo: 'bar'\n   *   }\n   * })\n   */\n  userData: UserData = {}\n  /**\n   * The last velocity of the scroll\n   */\n  lastVelocity = 0\n  /**\n   * The current velocity of the scroll\n   */\n  velocity = 0\n  /**\n   * The direction of the scroll\n   */\n  direction: 1 | -1 | 0 = 0\n  /**\n   * The options passed to the lenis instance\n   */\n  options: OptionalPick<\n    Required<LenisOptions>,\n    'duration' | 'prevent' | 'virtualScroll'\n  >\n  /**\n   * The target scroll value\n   */\n  targetScroll: number\n  /**\n   * The animated scroll value\n   */\n  animatedScroll: number\n\n  // These are instanciated here as they don't need information from the options\n  private readonly animate = new Animate()\n  private readonly emitter = new Emitter()\n  // These are instanciated in the constructor as they need information from the options\n  readonly dimensions: Dimensions // This is not private because it's used in the Snap class\n  private readonly virtualScroll: VirtualScroll\n\n  constructor({\n    wrapper = window,\n    content = document.documentElement,\n    eventsTarget = wrapper,\n    smoothWheel = true,\n    syncTouch = false,\n    syncTouchLerp = 0.075,\n    touchInertiaMultiplier = 35,\n    duration, // in seconds\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    lerp = 0.1,\n    infinite = false,\n    orientation = 'vertical', // vertical, horizontal\n    gestureOrientation = 'vertical', // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = 1,\n    autoResize = true,\n    prevent,\n    virtualScroll,\n    __experimental__naiveDimensions = false,\n  }: LenisOptions = {}) {\n    // Set version\n    window.lenisVersion = version\n\n    // Check if wrapper is html or body, fallback to window\n    if (\n      !wrapper ||\n      wrapper === document.documentElement ||\n      wrapper === document.body\n    ) {\n      wrapper = window\n    }\n\n    // Setup options\n    this.options = {\n      wrapper,\n      content,\n      eventsTarget,\n      smoothWheel,\n      syncTouch,\n      syncTouchLerp,\n      touchInertiaMultiplier,\n      duration,\n      easing,\n      lerp,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      autoResize,\n      prevent,\n      virtualScroll,\n      __experimental__naiveDimensions,\n    }\n\n    // Setup dimensions instance\n    this.dimensions = new Dimensions(wrapper, content, { autoResize })\n\n    // Setup class name\n    this.updateClassName()\n\n    // Set the initial scroll value for all scroll information\n    this.targetScroll = this.animatedScroll = this.actualScroll\n\n    // Add event listeners\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\n\n    this.options.wrapper.addEventListener(\n      'pointerdown',\n      this.onPointerDown as EventListener,\n      false\n    )\n\n    // Setup virtual scroll instance\n    this.virtualScroll = new VirtualScroll(eventsTarget as HTMLElement, {\n      touchMultiplier,\n      wheelMultiplier,\n    })\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\n  }\n\n  /**\n   * Destroy the lenis instance, remove all event listeners and clean up the class name\n   */\n  destroy() {\n    this.emitter.destroy()\n\n    this.options.wrapper.removeEventListener(\n      'scroll',\n      this.onNativeScroll,\n      false\n    )\n    this.options.wrapper.removeEventListener(\n      'pointerdown',\n      this.onPointerDown as EventListener,\n      false\n    )\n\n    this.virtualScroll.destroy()\n    this.dimensions.destroy()\n\n    this.cleanUpClassName()\n  }\n\n  /**\n   * Add an event listener for the given event and callback\n   *\n   * @param event Event name\n   * @param callback Callback function\n   * @returns Unsubscribe function\n   */\n  on(event: 'scroll', callback: ScrollCallback): () => void\n  on(event: 'virtual-scroll', callback: VirtualScrollCallback): () => void\n  on(event: LenisEvent, callback: any) {\n    return this.emitter.on(event, callback)\n  }\n\n  /**\n   * Remove an event listener for the given event and callback\n   *\n   * @param event Event name\n   * @param callback Callback function\n   */\n  off(event: 'scroll', callback: ScrollCallback): void\n  off(event: 'virtual-scroll', callback: VirtualScrollCallback): void\n  off(event: LenisEvent, callback: any) {\n    return this.emitter.off(event, callback)\n  }\n\n  private setScroll(scroll: number) {\n    // apply scroll value immediately\n    if (this.isHorizontal) {\n      this.rootElement.scrollLeft = scroll\n    } else {\n      this.rootElement.scrollTop = scroll\n    }\n  }\n\n  private onPointerDown = (event: PointerEvent | MouseEvent) => {\n    if (event.button === 1) {\n      this.reset()\n    }\n  }\n\n  private onVirtualScroll = (data: VirtualScrollData) => {\n    if (\n      typeof this.options.virtualScroll === 'function' &&\n      this.options.virtualScroll(data) === false\n    )\n      return\n\n    const { deltaX, deltaY, event } = data\n\n    this.emitter.emit('virtual-scroll', { deltaX, deltaY, event })\n\n    // keep zoom feature\n    if (event.ctrlKey) return\n\n    const isTouch = event.type.includes('touch')\n    const isWheel = event.type.includes('wheel')\n\n    this.isTouching = event.type === 'touchstart' || event.type === 'touchmove'\n    // if (event.type === 'touchend') {\n    //   console.log('touchend', this.scroll)\n    //   // this.lastVelocity = this.velocity\n    //   // this.velocity = 0\n    //   // this.isScrolling = false\n    //   this.emit({ type: 'touchend' })\n    //   // alert('touchend')\n    //   return\n    // }\n\n    const isTapToStop =\n      this.options.syncTouch &&\n      isTouch &&\n      event.type === 'touchstart' &&\n      !this.isStopped &&\n      !this.isLocked\n\n    if (isTapToStop) {\n      this.reset()\n      return\n    }\n\n    const isClick = deltaX === 0 && deltaY === 0 // click event\n\n    // const isPullToRefresh =\n    //   this.options.gestureOrientation === 'vertical' &&\n    //   this.scroll === 0 &&\n    //   !this.options.infinite &&\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\n\n    const isUnknownGesture =\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\n\n    if (isClick || isUnknownGesture) {\n      // console.log('prevent')\n      return\n    }\n\n    // catch if scrolling on nested scroll elements\n    let composedPath = event.composedPath()\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\n\n    const prevent = this.options.prevent\n\n    if (\n      !!composedPath.find(\n        (node) =>\n          node instanceof HTMLElement &&\n          ((typeof prevent === 'function' && prevent?.(node)) ||\n            node.hasAttribute?.('data-lenis-prevent') ||\n            (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\n            (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\n            (node.classList?.contains('lenis') &&\n              !node.classList?.contains('lenis-stopped'))) // nested lenis instance\n      )\n    )\n      return\n\n    if (this.isStopped || this.isLocked) {\n      event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\n      return\n    }\n\n    const isSmooth =\n      (this.options.syncTouch && isTouch) ||\n      (this.options.smoothWheel && isWheel)\n\n    if (!isSmooth) {\n      this.isScrolling = 'native'\n      this.animate.stop()\n      return\n    }\n\n    event.preventDefault()\n\n    let delta = deltaY\n    if (this.options.gestureOrientation === 'both') {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\n    } else if (this.options.gestureOrientation === 'horizontal') {\n      delta = deltaX\n    }\n\n    const syncTouch = isTouch && this.options.syncTouch\n    const isTouchEnd = isTouch && event.type === 'touchend'\n\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\n\n    if (hasTouchInertia) {\n      delta = this.velocity * this.options.touchInertiaMultiplier\n    }\n\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...(syncTouch\n        ? {\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\n          }\n        : {\n            lerp: this.options.lerp,\n            duration: this.options.duration,\n            easing: this.options.easing,\n          }),\n    })\n  }\n\n  /**\n   * Force lenis to recalculate the dimensions\n   */\n  resize() {\n    this.dimensions.resize()\n    this.animatedScroll = this.targetScroll = this.actualScroll\n    this.emit()\n  }\n\n  private emit() {\n    this.emitter.emit('scroll', this)\n  }\n\n  private onNativeScroll = () => {\n    if (this._resetVelocityTimeout !== null) {\n      clearTimeout(this._resetVelocityTimeout)\n      this._resetVelocityTimeout = null\n    }\n\n    if (this._preventNextNativeScrollEvent) {\n      this._preventNextNativeScrollEvent = false\n      return\n    }\n\n    if (this.isScrolling === false || this.isScrolling === 'native') {\n      const lastScroll = this.animatedScroll\n      this.animatedScroll = this.targetScroll = this.actualScroll\n      this.lastVelocity = this.velocity\n      this.velocity = this.animatedScroll - lastScroll\n      this.direction = Math.sign(\n        this.animatedScroll - lastScroll\n      ) as Lenis['direction']\n      this.isScrolling = 'native'\n      this.emit()\n\n      if (this.velocity !== 0) {\n        this._resetVelocityTimeout = setTimeout(() => {\n          this.lastVelocity = this.velocity\n          this.velocity = 0\n          this.isScrolling = false\n          this.emit()\n        }, 400)\n      }\n    }\n  }\n\n  private reset() {\n    this.isLocked = false\n    this.isScrolling = false\n    this.animatedScroll = this.targetScroll = this.actualScroll\n    this.lastVelocity = this.velocity = 0\n    this.animate.stop()\n  }\n\n  /**\n   * Start lenis scroll after it has been stopped\n   */\n  start() {\n    if (!this.isStopped) return\n    this.isStopped = false\n\n    this.reset()\n  }\n\n  /**\n   * Stop lenis scroll\n   */\n  stop() {\n    if (this.isStopped) return\n    this.isStopped = true\n    this.animate.stop()\n\n    this.reset()\n  }\n\n  /**\n   * RequestAnimationFrame for lenis\n   *\n   * @param time The time in ms from an external clock like `requestAnimationFrame` or Tempus\n   */\n  raf(time: number) {\n    const deltaTime = time - (this.time || time)\n    this.time = time\n\n    this.animate.advance(deltaTime * 0.001)\n  }\n\n  /**\n   * Scroll to a target value\n   *\n   * @param target The target value to scroll to\n   * @param options The options for the scroll\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   offset: 100,\n   *   duration: 1,\n   *   easing: (t) => 1 - Math.cos((t * Math.PI) / 2),\n   *   lerp: 0.1,\n   *   onStart: () => {\n   *     console.log('onStart')\n   *   },\n   *   onComplete: () => {\n   *     console.log('onComplete')\n   *   },\n   * })\n   */\n  scrollTo(\n    target: number | string | HTMLElement,\n    {\n      offset = 0,\n      immediate = false,\n      lock = false,\n      duration = this.options.duration,\n      easing = this.options.easing,\n      lerp = this.options.lerp,\n      onStart,\n      onComplete,\n      force = false, // scroll even if stopped\n      programmatic = true, // called from outside of the class\n      userData,\n    }: ScrollToOptions = {}\n  ) {\n    if ((this.isStopped || this.isLocked) && !force) return\n\n    // keywords\n    if (\n      typeof target === 'string' &&\n      ['top', 'left', 'start'].includes(target)\n    ) {\n      target = 0\n    } else if (\n      typeof target === 'string' &&\n      ['bottom', 'right', 'end'].includes(target)\n    ) {\n      target = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target instanceof HTMLElement && target?.nodeType) {\n        // Node element\n        node = target\n      }\n\n      if (node) {\n        if (this.options.wrapper !== window) {\n          // nested scroll offset correction\n          const wrapperRect = this.rootElement.getBoundingClientRect()\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\n        }\n\n        const rect = node.getBoundingClientRect()\n\n        target =\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\n      }\n    }\n\n    if (typeof target !== 'number') return\n\n    target += offset\n    target = Math.round(target)\n\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll\n      }\n    } else {\n      target = clamp(0, target, this.limit)\n    }\n\n    if (target === this.targetScroll) {\n      onStart?.(this)\n      onComplete?.(this)\n      return\n    }\n\n    this.userData = userData ?? {}\n\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target\n      this.setScroll(this.scroll)\n      this.reset()\n      this.preventNextNativeScrollEvent()\n      this.emit()\n      onComplete?.(this)\n      this.userData = {}\n      return\n    }\n\n    if (!programmatic) {\n      this.targetScroll = target\n    }\n\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp,\n      onStart: () => {\n        // started\n        if (lock) this.isLocked = true\n        this.isScrolling = 'smooth'\n        onStart?.(this)\n      },\n      onUpdate: (value: number, completed: boolean) => {\n        this.isScrolling = 'smooth'\n\n        // updated\n        this.lastVelocity = this.velocity\n        this.velocity = value - this.animatedScroll\n        this.direction = Math.sign(this.velocity) as Lenis['direction']\n\n        this.animatedScroll = value\n        this.setScroll(this.scroll)\n\n        if (programmatic) {\n          // wheel during programmatic should stop it\n          this.targetScroll = value\n        }\n\n        if (!completed) this.emit()\n\n        if (completed) {\n          this.reset()\n          this.emit()\n          onComplete?.(this)\n          this.userData = {}\n          // avoid emitting event twice\n          this.preventNextNativeScrollEvent()\n        }\n      },\n    })\n  }\n\n  private preventNextNativeScrollEvent() {\n    this._preventNextNativeScrollEvent = true\n\n    requestAnimationFrame(() => {\n      this._preventNextNativeScrollEvent = false\n    })\n  }\n\n  /**\n   * The root element on which lenis is instanced\n   */\n  get rootElement() {\n    return (\n      this.options.wrapper === window\n        ? document.documentElement\n        : this.options.wrapper\n    ) as HTMLElement\n  }\n\n  /**\n   * The limit which is the maximum scroll value\n   */\n  get limit() {\n    if (this.options.__experimental__naiveDimensions) {\n      if (this.isHorizontal) {\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\n      } else {\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\n      }\n    } else {\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\n    }\n  }\n\n  /**\n   * Whether or not the scroll is horizontal\n   */\n  get isHorizontal() {\n    return this.options.orientation === 'horizontal'\n  }\n\n  /**\n   * The actual scroll value\n   */\n  get actualScroll() {\n    // value browser takes into account\n    return this.isHorizontal\n      ? this.rootElement.scrollLeft\n      : this.rootElement.scrollTop\n  }\n\n  /**\n   * The current scroll value\n   */\n  get scroll() {\n    return this.options.infinite\n      ? modulo(this.animatedScroll, this.limit)\n      : this.animatedScroll\n  }\n\n  /**\n   * The progress of the scroll relative to the limit\n   */\n  get progress() {\n    // avoid progress to be NaN\n    return this.limit === 0 ? 1 : this.scroll / this.limit\n  }\n\n  /**\n   * Current scroll state\n   */\n  get isScrolling() {\n    return this._isScrolling\n  }\n\n  private set isScrolling(value: Scrolling) {\n    if (this._isScrolling !== value) {\n      this._isScrolling = value\n      this.updateClassName()\n    }\n  }\n\n  /**\n   * Check if lenis is stopped\n   */\n  get isStopped() {\n    return this._isStopped\n  }\n\n  private set isStopped(value: boolean) {\n    if (this._isStopped !== value) {\n      this._isStopped = value\n      this.updateClassName()\n    }\n  }\n\n  /**\n   * Check if lenis is locked\n   */\n  get isLocked() {\n    return this._isLocked\n  }\n\n  private set isLocked(value: boolean) {\n    if (this._isLocked !== value) {\n      this._isLocked = value\n      this.updateClassName()\n    }\n  }\n\n  /**\n   * Check if lenis is smooth scrolling\n   */\n  get isSmooth() {\n    return this.isScrolling === 'smooth'\n  }\n\n  /**\n   * The class name applied to the wrapper element\n   */\n  get className() {\n    let className = 'lenis'\n    if (this.isStopped) className += ' lenis-stopped'\n    if (this.isLocked) className += ' lenis-locked'\n    if (this.isScrolling) className += ' lenis-scrolling'\n    if (this.isScrolling === 'smooth') className += ' lenis-smooth'\n    return className\n  }\n\n  private updateClassName() {\n    this.cleanUpClassName()\n\n    this.rootElement.className =\n      `${this.rootElement.className} ${this.className}`.trim()\n  }\n\n  private cleanUpClassName() {\n    this.rootElement.className = this.rootElement.className\n      .replace(/lenis(-\\w+)?/g, '')\n      .trim()\n  }\n}\n"],"mappings":"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","names":["lerp","lerp"]}