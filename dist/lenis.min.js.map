{"version":3,"file":"lenis.min.js","sources":["../../src/maths.ts","../../src/animate.ts","../../src/dimensions.ts","../../src/debounce.ts","../../src/emitter.ts","../../src/virtual-scroll.ts","../../src/index.ts"],"sourcesContent":["/**\n * Clamp a value between a minimum and maximum value\n *\n * @param min Minimum value\n * @param input Value to clamp\n * @param max Maximum value\n * @returns Clamped value\n */\nexport function clamp(min: number, input: number, max: number) {\n  return Math.max(min, Math.min(input, max))\n}\n\n/**\n * Truncate a floating-point number to a specified number of decimal places\n *\n * @param value Value to truncate\n * @param decimals Number of decimal places to truncate to\n * @returns Truncated value\n */\nexport function truncate(value: number, decimals = 0) {\n  return parseFloat(value.toFixed(decimals))\n}\n\n/**\n *  Linearly interpolate between two values using an amount (0 <= t <= 1)\n *\n * @param x First value\n * @param y Second value\n * @param t Amount to interpolate (0 <= t <= 1)\n * @returns Interpolated value\n */\nexport function lerp(x: number, y: number, t: number) {\n  return (1 - t) * x + t * y\n}\n\n/**\n * Damp a value over time using a damping factor\n * {@link http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/}\n *\n * @param x Initial value\n * @param y Target value\n * @param lambda Damping factor\n * @param dt Time elapsed since the last update\n * @returns Damped value\n */\nexport function damp(x: number, y: number, lambda: number, deltaTime: number) {\n  return lerp(x, y, 1 - Math.exp(-lambda * deltaTime))\n}\n\n/**\n * Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\n * {@link https://anguscroll.com/just/just-modulo}\n *\n * @param n Dividend\n * @param d Divisor\n * @returns Modulo\n */\nexport function modulo(n: number, d: number) {\n  return ((n % d) + d) % d\n}\n","import { clamp, damp } from './maths'\nimport type { EasingFunction, FromToOptions, OnUpdateCallback } from './types'\n\n/**\n * Animate class to handle value animations with lerping or easing\n *\n * @example\n * const animate = new Animate()\n * animate.fromTo(0, 100, { duration: 1, easing: (t) => t })\n * animate.advance(0.5) // 50\n */\nexport class Animate {\n  isRunning = false\n  value = 0\n  from = 0\n  to = 0\n  currentTime = 0\n\n  // These are instanciated in the fromTo method\n  lerp?: number\n  duration?: number\n  easing?: EasingFunction\n  onUpdate?: OnUpdateCallback\n\n  /**\n   * Advance the animation by the given delta time\n   *\n   * @param deltaTime - The time in seconds to advance the animation\n   */\n  advance(deltaTime: number) {\n    if (!this.isRunning) return\n\n    let completed = false\n\n    if (this.duration && this.easing) {\n      this.currentTime += deltaTime\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\n\n      completed = linearProgress >= 1\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\n      this.value = this.from + (this.to - this.from) * easedProgress\n    } else if (this.lerp) {\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to\n        completed = true\n      }\n    } else {\n      // If no easing or lerp, just jump to the end value\n      this.value = this.to\n      completed = true\n    }\n\n    if (completed) {\n      this.stop()\n    }\n\n    // Call the onUpdate callback with the current value and completed status\n    this.onUpdate?.(this.value, completed)\n  }\n\n  /** Stop the animation */\n  stop() {\n    this.isRunning = false\n  }\n\n  /**\n   * Set up the animation from a starting value to an ending value\n   * with optional parameters for lerping, duration, easing, and onUpdate callback\n   *\n   * @param from - The starting value\n   * @param to - The ending value\n   * @param options - Options for the animation\n   */\n  fromTo(\n    from: number,\n    to: number,\n    { lerp, duration, easing, onStart, onUpdate }: FromToOptions\n  ) {\n    this.from = this.value = from\n    this.to = to\n    this.lerp = lerp\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n\n    onStart?.()\n    this.onUpdate = onUpdate\n  }\n}\n","import { debounce } from './debounce'\n\n/**\n * Dimensions class to handle the size of the content and wrapper\n *\n * @example\n * const dimensions = new Dimensions(wrapper, content)\n * dimensions.on('resize', (e) => {\n *   console.log(e.width, e.height)\n * })\n */\nexport class Dimensions {\n  width = 0\n  height = 0\n  scrollHeight = 0\n  scrollWidth = 0\n\n  // These are instanciated in the constructor as they need information from the options\n  private debouncedResize?: (...args: unknown[]) => void\n  private wrapperResizeObserver?: ResizeObserver\n  private contentResizeObserver?: ResizeObserver\n\n  constructor(\n    private wrapper: HTMLElement | Window,\n    private content: HTMLElement,\n    { autoResize = true, debounce: debounceValue = 250 } = {}\n  ) {\n    if (autoResize) {\n      this.debouncedResize = debounce(this.resize, debounceValue)\n\n      if (this.wrapper instanceof Window) {\n        window.addEventListener('resize', this.debouncedResize, false)\n      } else {\n        this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize)\n        this.wrapperResizeObserver.observe(this.wrapper)\n      }\n\n      this.contentResizeObserver = new ResizeObserver(this.debouncedResize)\n      this.contentResizeObserver.observe(this.content)\n    }\n\n    this.resize()\n  }\n\n  destroy() {\n    this.wrapperResizeObserver?.disconnect()\n    this.contentResizeObserver?.disconnect()\n\n    if (this.wrapper === window && this.debouncedResize) {\n      window.removeEventListener('resize', this.debouncedResize, false)\n    }\n  }\n\n  resize = () => {\n    this.onWrapperResize()\n    this.onContentResize()\n  }\n\n  onWrapperResize = () => {\n    if (this.wrapper instanceof Window) {\n      this.width = window.innerWidth\n      this.height = window.innerHeight\n    } else {\n      this.width = this.wrapper.clientWidth\n      this.height = this.wrapper.clientHeight\n    }\n  }\n\n  onContentResize = () => {\n    if (this.wrapper instanceof Window) {\n      this.scrollHeight = this.content.scrollHeight\n      this.scrollWidth = this.content.scrollWidth\n    } else {\n      this.scrollHeight = this.wrapper.scrollHeight\n      this.scrollWidth = this.wrapper.scrollWidth\n    }\n  }\n\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height,\n    }\n  }\n}\n","export function debounce<CB extends (...args: any[]) => void>(\n  callback: CB,\n  delay: number\n) {\n  let timer: number | undefined\n  return function <T>(this: T, ...args: Parameters<typeof callback>) {\n    let context = this\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      timer = undefined\n      callback.apply(context, args)\n    }, delay)\n  }\n}\n","/**\n * Emitter class to handle events\n * @example\n * const emitter = new Emitter()\n * emitter.on('event', (data) => {\n *   console.log(data)\n * })\n * emitter.emit('event', 'data')\n */\nexport class Emitter {\n  private events: Record<\n    string,\n    Array<(...args: unknown[]) => void> | undefined\n  > = {}\n\n  /**\n   * Emit an event with the given data\n   * @param event Event name\n   * @param args Data to pass to the event handlers\n   */\n  emit(event: string, ...args: unknown[]) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i]?.(...args)\n    }\n  }\n\n  /**\n   * Add a callback to the event\n   * @param event Event name\n   * @param cb Callback function\n   * @returns Unsubscribe function\n   */\n  on<CB extends (...args: any[]) => void>(event: string, cb: CB) {\n    // Add the callback to the event's callback list, or create a new list with the callback\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n\n    // Return an unsubscribe function\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\n    }\n  }\n\n  /**\n   * Remove a callback from the event\n   * @param event Event name\n   * @param callback Callback function\n   */\n  off<CB extends (...args: any[]) => void>(event: string, callback: CB) {\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\n  }\n\n  /**\n   * Remove all event listeners and clean up\n   */\n  destroy() {\n    this.events = {}\n  }\n}\n","import { Emitter } from './emitter'\nimport { VirtualScrollCallback } from './types'\n\nconst LINE_HEIGHT = 100 / 6\nconst listenerOptions: AddEventListenerOptions = { passive: false }\n\nexport class VirtualScroll {\n  touchStart = {\n    x: 0,\n    y: 0,\n  }\n  lastDelta = {\n    x: 0,\n    y: 0,\n  }\n  window = {\n    width: 0,\n    height: 0,\n  }\n  private emitter = new Emitter()\n\n  constructor(\n    private element: HTMLElement,\n    private options = { wheelMultiplier: 1, touchMultiplier: 1 }\n  ) {\n    window.addEventListener('resize', this.onWindowResize, false)\n    this.onWindowResize()\n\n    this.element.addEventListener('wheel', this.onWheel, listenerOptions)\n    this.element.addEventListener(\n      'touchstart',\n      this.onTouchStart,\n      listenerOptions\n    )\n    this.element.addEventListener(\n      'touchmove',\n      this.onTouchMove,\n      listenerOptions\n    )\n    this.element.addEventListener('touchend', this.onTouchEnd, listenerOptions)\n  }\n\n  /**\n   * Add an event listener for the given event and callback\n   *\n   * @param event Event name\n   * @param callback Callback function\n   */\n  on(event: string, callback: VirtualScrollCallback) {\n    return this.emitter.on(event, callback)\n  }\n\n  /** Remove all event listeners and clean up */\n  destroy() {\n    this.emitter.destroy()\n\n    window.removeEventListener('resize', this.onWindowResize, false)\n\n    this.element.removeEventListener('wheel', this.onWheel, listenerOptions)\n    this.element.removeEventListener(\n      'touchstart',\n      this.onTouchStart,\n      listenerOptions\n    )\n    this.element.removeEventListener(\n      'touchmove',\n      this.onTouchMove,\n      listenerOptions\n    )\n    this.element.removeEventListener(\n      'touchend',\n      this.onTouchEnd,\n      listenerOptions\n    )\n  }\n\n  /**\n   * Event handler for 'touchstart' event\n   *\n   * @param event Touch event\n   */\n  onTouchStart = (event: TouchEvent) => {\n    // @ts-expect-error - event.targetTouches is not defined\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: 0,\n      y: 0,\n    }\n\n    this.emitter.emit('scroll', {\n      deltaX: 0,\n      deltaY: 0,\n      event,\n    })\n  }\n\n  /** Event handler for 'touchmove' event */\n  onTouchMove = (event: TouchEvent) => {\n    // @ts-expect-error - event.targetTouches is not defined\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    const deltaX = -(clientX - this.touchStart.x) * this.options.touchMultiplier\n    const deltaY = -(clientY - this.touchStart.y) * this.options.touchMultiplier\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: deltaX,\n      y: deltaY,\n    }\n\n    this.emitter.emit('scroll', {\n      deltaX,\n      deltaY,\n      event,\n    })\n  }\n\n  onTouchEnd = (event: TouchEvent) => {\n    this.emitter.emit('scroll', {\n      deltaX: this.lastDelta.x,\n      deltaY: this.lastDelta.y,\n      event,\n    })\n  }\n\n  /** Event handler for 'wheel' event */\n  onWheel = (event: WheelEvent) => {\n    let { deltaX, deltaY, deltaMode } = event\n\n    const multiplierX =\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.width : 1\n    const multiplierY =\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.height : 1\n\n    deltaX *= multiplierX\n    deltaY *= multiplierY\n\n    deltaX *= this.options.wheelMultiplier\n    deltaY *= this.options.wheelMultiplier\n\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\n  }\n\n  onWindowResize = () => {\n    this.window = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    }\n  }\n}\n","import { version } from '../../../package.json'\nimport { Animate } from './animate'\nimport { Dimensions } from './dimensions'\nimport { Emitter } from './emitter'\nimport { clamp, modulo } from './maths'\nimport type {\n  LenisEvent,\n  LenisOptions,\n  ScrollCallback,\n  Scrolling,\n  ScrollToOptions,\n  UserData,\n  VirtualScrollCallback,\n  VirtualScrollData,\n} from './types'\nimport { VirtualScroll } from './virtual-scroll'\n\n// Types\nexport * from './types'\n\n// Technical explanation\n// - listen to 'wheel' events\n// - prevent 'wheel' event to prevent scroll\n// - normalize wheel delta\n// - add delta to targetScroll\n// - animate scroll to targetScroll (smooth context)\n// - if animation is not running, listen to 'scroll' events (native context)\n\ntype OptionalPick<T, F extends keyof T> = Omit<T, F> & Partial<Pick<T, F>>\n\nexport default class Lenis {\n  private _isScrolling: Scrolling = false // true when scroll is animating\n  private _isStopped = false // true if user should not be able to scroll - enable/disable programmatically\n  private _isLocked = false // same as isStopped but enabled/disabled when scroll reaches target\n  private _preventNextNativeScrollEvent = false\n  private _resetVelocityTimeout: number | null = null\n\n  /**\n   * Whether or not the user is touching the screen\n   */\n  isTouching?: boolean\n  /**\n   * The time in ms since the lenis instance was created\n   */\n  time = 0\n  /**\n   * User data that will be forwarded through the scroll event\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   userData: {\n   *     foo: 'bar'\n   *   }\n   * })\n   */\n  userData: UserData = {}\n  /**\n   * The last velocity of the scroll\n   */\n  lastVelocity = 0\n  /**\n   * The current velocity of the scroll\n   */\n  velocity = 0\n  /**\n   * The direction of the scroll\n   */\n  direction: 1 | -1 | 0 = 0\n  /**\n   * The options passed to the lenis instance\n   */\n  options: OptionalPick<\n    Required<LenisOptions>,\n    'duration' | 'prevent' | 'virtualScroll'\n  >\n  /**\n   * The target scroll value\n   */\n  targetScroll: number\n  /**\n   * The animated scroll value\n   */\n  animatedScroll: number\n\n  // These are instanciated here as they don't need information from the options\n  private readonly animate = new Animate()\n  private readonly emitter = new Emitter()\n  // These are instanciated in the constructor as they need information from the options\n  readonly dimensions: Dimensions // This is not private because it's used in the Snap class\n  private readonly virtualScroll: VirtualScroll\n\n  constructor({\n    wrapper = window,\n    content = document.documentElement,\n    eventsTarget = wrapper,\n    smoothWheel = true,\n    syncTouch = false,\n    syncTouchLerp = 0.075,\n    touchInertiaMultiplier = 35,\n    duration, // in seconds\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    lerp = 0.1,\n    infinite = false,\n    orientation = 'vertical', // vertical, horizontal\n    gestureOrientation = 'vertical', // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = 1,\n    autoResize = true,\n    prevent,\n    virtualScroll,\n    __experimental__naiveDimensions = false,\n  }: LenisOptions = {}) {\n    // Set version\n    window.lenisVersion = version\n\n    // Check if wrapper is html or body, fallback to window\n    if (\n      !wrapper ||\n      wrapper === document.documentElement ||\n      wrapper === document.body\n    ) {\n      wrapper = window\n    }\n\n    // Setup options\n    this.options = {\n      wrapper,\n      content,\n      eventsTarget,\n      smoothWheel,\n      syncTouch,\n      syncTouchLerp,\n      touchInertiaMultiplier,\n      duration,\n      easing,\n      lerp,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      autoResize,\n      prevent,\n      virtualScroll,\n      __experimental__naiveDimensions,\n    }\n\n    // Setup dimensions instance\n    this.dimensions = new Dimensions(wrapper, content, { autoResize })\n\n    // Setup class name\n    this.updateClassName()\n\n    // Set the initial scroll value for all scroll information\n    this.targetScroll = this.animatedScroll = this.actualScroll\n\n    // Add event listeners\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\n\n    this.options.wrapper.addEventListener(\n      'pointerdown',\n      this.onPointerDown as EventListener,\n      false\n    )\n\n    // Setup virtual scroll instance\n    this.virtualScroll = new VirtualScroll(eventsTarget as HTMLElement, {\n      touchMultiplier,\n      wheelMultiplier,\n    })\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\n  }\n\n  /**\n   * Destroy the lenis instance, remove all event listeners and clean up the class name\n   */\n  destroy() {\n    this.emitter.destroy()\n\n    this.options.wrapper.removeEventListener(\n      'scroll',\n      this.onNativeScroll,\n      false\n    )\n    this.options.wrapper.removeEventListener(\n      'pointerdown',\n      this.onPointerDown as EventListener,\n      false\n    )\n\n    this.virtualScroll.destroy()\n    this.dimensions.destroy()\n\n    this.cleanUpClassName()\n  }\n\n  /**\n   * Add an event listener for the given event and callback\n   *\n   * @param event Event name\n   * @param callback Callback function\n   * @returns Unsubscribe function\n   */\n  on(event: 'scroll', callback: ScrollCallback): () => void\n  on(event: 'virtual-scroll', callback: VirtualScrollCallback): () => void\n  on(event: LenisEvent, callback: any) {\n    return this.emitter.on(event, callback)\n  }\n\n  /**\n   * Remove an event listener for the given event and callback\n   *\n   * @param event Event name\n   * @param callback Callback function\n   */\n  off(event: 'scroll', callback: ScrollCallback): void\n  off(event: 'virtual-scroll', callback: VirtualScrollCallback): void\n  off(event: LenisEvent, callback: any) {\n    return this.emitter.off(event, callback)\n  }\n\n  private setScroll(scroll: number) {\n    // apply scroll value immediately\n    if (this.isHorizontal) {\n      this.rootElement.scrollLeft = scroll\n    } else {\n      this.rootElement.scrollTop = scroll\n    }\n  }\n\n  private onPointerDown = (event: PointerEvent | MouseEvent) => {\n    if (event.button === 1) {\n      this.reset()\n    }\n  }\n\n  private onVirtualScroll = (data: VirtualScrollData) => {\n    if (\n      typeof this.options.virtualScroll === 'function' &&\n      this.options.virtualScroll(data) === false\n    )\n      return\n\n    const { deltaX, deltaY, event } = data\n\n    this.emitter.emit('virtual-scroll', { deltaX, deltaY, event })\n\n    // keep zoom feature\n    if (event.ctrlKey) return\n\n    const isTouch = event.type.includes('touch')\n    const isWheel = event.type.includes('wheel')\n\n    this.isTouching = event.type === 'touchstart' || event.type === 'touchmove'\n    // if (event.type === 'touchend') {\n    //   console.log('touchend', this.scroll)\n    //   // this.lastVelocity = this.velocity\n    //   // this.velocity = 0\n    //   // this.isScrolling = false\n    //   this.emit({ type: 'touchend' })\n    //   // alert('touchend')\n    //   return\n    // }\n\n    const isTapToStop =\n      this.options.syncTouch &&\n      isTouch &&\n      event.type === 'touchstart' &&\n      !this.isStopped &&\n      !this.isLocked\n\n    if (isTapToStop) {\n      this.reset()\n      return\n    }\n\n    const isClick = deltaX === 0 && deltaY === 0 // click event\n\n    // const isPullToRefresh =\n    //   this.options.gestureOrientation === 'vertical' &&\n    //   this.scroll === 0 &&\n    //   !this.options.infinite &&\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\n\n    const isUnknownGesture =\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\n\n    if (isClick || isUnknownGesture) {\n      // console.log('prevent')\n      return\n    }\n\n    // catch if scrolling on nested scroll elements\n    let composedPath = event.composedPath()\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\n\n    const prevent = this.options.prevent\n\n    if (\n      !!composedPath.find(\n        (node) =>\n          node instanceof HTMLElement &&\n          ((typeof prevent === 'function' && prevent?.(node)) ||\n            node.hasAttribute?.('data-lenis-prevent') ||\n            (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\n            (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\n            (node.classList?.contains('lenis') &&\n              !node.classList?.contains('lenis-stopped'))) // nested lenis instance\n      )\n    )\n      return\n\n    if (this.isStopped || this.isLocked) {\n      event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\n      return\n    }\n\n    const isSmooth =\n      (this.options.syncTouch && isTouch) ||\n      (this.options.smoothWheel && isWheel)\n\n    if (!isSmooth) {\n      this.isScrolling = 'native'\n      this.animate.stop()\n      return\n    }\n\n    event.preventDefault()\n\n    let delta = deltaY\n    if (this.options.gestureOrientation === 'both') {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\n    } else if (this.options.gestureOrientation === 'horizontal') {\n      delta = deltaX\n    }\n\n    const syncTouch = isTouch && this.options.syncTouch\n    const isTouchEnd = isTouch && event.type === 'touchend'\n\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\n\n    if (hasTouchInertia) {\n      delta = this.velocity * this.options.touchInertiaMultiplier\n    }\n\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...(syncTouch\n        ? {\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\n          }\n        : {\n            lerp: this.options.lerp,\n            duration: this.options.duration,\n            easing: this.options.easing,\n          }),\n    })\n  }\n\n  /**\n   * Force lenis to recalculate the dimensions\n   */\n  resize() {\n    this.dimensions.resize()\n    this.animatedScroll = this.targetScroll = this.actualScroll\n    this.emit()\n  }\n\n  private emit() {\n    this.emitter.emit('scroll', this)\n  }\n\n  private onNativeScroll = () => {\n    if (this._resetVelocityTimeout !== null) {\n      clearTimeout(this._resetVelocityTimeout)\n      this._resetVelocityTimeout = null\n    }\n\n    if (this._preventNextNativeScrollEvent) {\n      this._preventNextNativeScrollEvent = false\n      return\n    }\n\n    if (this.isScrolling === false || this.isScrolling === 'native') {\n      const lastScroll = this.animatedScroll\n      this.animatedScroll = this.targetScroll = this.actualScroll\n      this.lastVelocity = this.velocity\n      this.velocity = this.animatedScroll - lastScroll\n      this.direction = Math.sign(\n        this.animatedScroll - lastScroll\n      ) as Lenis['direction']\n      this.isScrolling = 'native'\n      this.emit()\n\n      if (this.velocity !== 0) {\n        this._resetVelocityTimeout = setTimeout(() => {\n          this.lastVelocity = this.velocity\n          this.velocity = 0\n          this.isScrolling = false\n          this.emit()\n        }, 400)\n      }\n    }\n  }\n\n  private reset() {\n    this.isLocked = false\n    this.isScrolling = false\n    this.animatedScroll = this.targetScroll = this.actualScroll\n    this.lastVelocity = this.velocity = 0\n    this.animate.stop()\n  }\n\n  /**\n   * Start lenis scroll after it has been stopped\n   */\n  start() {\n    if (!this.isStopped) return\n    this.isStopped = false\n\n    this.reset()\n  }\n\n  /**\n   * Stop lenis scroll\n   */\n  stop() {\n    if (this.isStopped) return\n    this.isStopped = true\n    this.animate.stop()\n\n    this.reset()\n  }\n\n  /**\n   * RequestAnimationFrame for lenis\n   *\n   * @param time The time in ms from an external clock like `requestAnimationFrame` or Tempus\n   */\n  raf(time: number) {\n    const deltaTime = time - (this.time || time)\n    this.time = time\n\n    this.animate.advance(deltaTime * 0.001)\n  }\n\n  /**\n   * Scroll to a target value\n   *\n   * @param target The target value to scroll to\n   * @param options The options for the scroll\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   offset: 100,\n   *   duration: 1,\n   *   easing: (t) => 1 - Math.cos((t * Math.PI) / 2),\n   *   lerp: 0.1,\n   *   onStart: () => {\n   *     console.log('onStart')\n   *   },\n   *   onComplete: () => {\n   *     console.log('onComplete')\n   *   },\n   * })\n   */\n  scrollTo(\n    target: number | string | HTMLElement,\n    {\n      offset = 0,\n      immediate = false,\n      lock = false,\n      duration = this.options.duration,\n      easing = this.options.easing,\n      lerp = this.options.lerp,\n      onStart,\n      onComplete,\n      force = false, // scroll even if stopped\n      programmatic = true, // called from outside of the class\n      userData,\n    }: ScrollToOptions = {}\n  ) {\n    if ((this.isStopped || this.isLocked) && !force) return\n\n    // keywords\n    if (\n      typeof target === 'string' &&\n      ['top', 'left', 'start'].includes(target)\n    ) {\n      target = 0\n    } else if (\n      typeof target === 'string' &&\n      ['bottom', 'right', 'end'].includes(target)\n    ) {\n      target = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target instanceof HTMLElement && target?.nodeType) {\n        // Node element\n        node = target\n      }\n\n      if (node) {\n        if (this.options.wrapper !== window) {\n          // nested scroll offset correction\n          const wrapperRect = this.rootElement.getBoundingClientRect()\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\n        }\n\n        const rect = node.getBoundingClientRect()\n\n        target =\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\n      }\n    }\n\n    if (typeof target !== 'number') return\n\n    target += offset\n    target = Math.round(target)\n\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll\n      }\n    } else {\n      target = clamp(0, target, this.limit)\n    }\n\n    if (target === this.targetScroll) {\n      onStart?.(this)\n      onComplete?.(this)\n      return\n    }\n\n    this.userData = userData ?? {}\n\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target\n      this.setScroll(this.scroll)\n      this.reset()\n      this.preventNextNativeScrollEvent()\n      this.emit()\n      onComplete?.(this)\n      this.userData = {}\n      return\n    }\n\n    if (!programmatic) {\n      this.targetScroll = target\n    }\n\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp,\n      onStart: () => {\n        // started\n        if (lock) this.isLocked = true\n        this.isScrolling = 'smooth'\n        onStart?.(this)\n      },\n      onUpdate: (value: number, completed: boolean) => {\n        this.isScrolling = 'smooth'\n\n        // updated\n        this.lastVelocity = this.velocity\n        this.velocity = value - this.animatedScroll\n        this.direction = Math.sign(this.velocity) as Lenis['direction']\n\n        this.animatedScroll = value\n        this.setScroll(this.scroll)\n\n        if (programmatic) {\n          // wheel during programmatic should stop it\n          this.targetScroll = value\n        }\n\n        if (!completed) this.emit()\n\n        if (completed) {\n          this.reset()\n          this.emit()\n          onComplete?.(this)\n          this.userData = {}\n          // avoid emitting event twice\n          this.preventNextNativeScrollEvent()\n        }\n      },\n    })\n  }\n\n  private preventNextNativeScrollEvent() {\n    this._preventNextNativeScrollEvent = true\n\n    requestAnimationFrame(() => {\n      this._preventNextNativeScrollEvent = false\n    })\n  }\n\n  /**\n   * The root element on which lenis is instanced\n   */\n  get rootElement() {\n    return (\n      this.options.wrapper === window\n        ? document.documentElement\n        : this.options.wrapper\n    ) as HTMLElement\n  }\n\n  /**\n   * The limit which is the maximum scroll value\n   */\n  get limit() {\n    if (this.options.__experimental__naiveDimensions) {\n      if (this.isHorizontal) {\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\n      } else {\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\n      }\n    } else {\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\n    }\n  }\n\n  /**\n   * Whether or not the scroll is horizontal\n   */\n  get isHorizontal() {\n    return this.options.orientation === 'horizontal'\n  }\n\n  /**\n   * The actual scroll value\n   */\n  get actualScroll() {\n    // value browser takes into account\n    return this.isHorizontal\n      ? this.rootElement.scrollLeft\n      : this.rootElement.scrollTop\n  }\n\n  /**\n   * The current scroll value\n   */\n  get scroll() {\n    return this.options.infinite\n      ? modulo(this.animatedScroll, this.limit)\n      : this.animatedScroll\n  }\n\n  /**\n   * The progress of the scroll relative to the limit\n   */\n  get progress() {\n    // avoid progress to be NaN\n    return this.limit === 0 ? 1 : this.scroll / this.limit\n  }\n\n  /**\n   * Current scroll state\n   */\n  get isScrolling() {\n    return this._isScrolling\n  }\n\n  private set isScrolling(value: Scrolling) {\n    if (this._isScrolling !== value) {\n      this._isScrolling = value\n      this.updateClassName()\n    }\n  }\n\n  /**\n   * Check if lenis is stopped\n   */\n  get isStopped() {\n    return this._isStopped\n  }\n\n  private set isStopped(value: boolean) {\n    if (this._isStopped !== value) {\n      this._isStopped = value\n      this.updateClassName()\n    }\n  }\n\n  /**\n   * Check if lenis is locked\n   */\n  get isLocked() {\n    return this._isLocked\n  }\n\n  private set isLocked(value: boolean) {\n    if (this._isLocked !== value) {\n      this._isLocked = value\n      this.updateClassName()\n    }\n  }\n\n  /**\n   * Check if lenis is smooth scrolling\n   */\n  get isSmooth() {\n    return this.isScrolling === 'smooth'\n  }\n\n  /**\n   * The class name applied to the wrapper element\n   */\n  get className() {\n    let className = 'lenis'\n    if (this.isStopped) className += ' lenis-stopped'\n    if (this.isLocked) className += ' lenis-locked'\n    if (this.isScrolling) className += ' lenis-scrolling'\n    if (this.isScrolling === 'smooth') className += ' lenis-smooth'\n    return className\n  }\n\n  private updateClassName() {\n    this.cleanUpClassName()\n\n    this.rootElement.className =\n      `${this.rootElement.className} ${this.className}`.trim()\n  }\n\n  private cleanUpClassName() {\n    this.rootElement.className = this.rootElement.className\n      .replace(/lenis(-\\w+)?/g, '')\n      .trim()\n  }\n}\n"],"names":["clamp","min","input","max","Math","Animate","constructor","this","isRunning","value","from","to","currentTime","advance","deltaTime","completed","duration","easing","linearProgress","easedProgress","lerp","damp","x","y","lambda","t","exp","round","stop","_a","onUpdate","call","fromTo","onStart","Dimensions","wrapper","content","autoResize","debounce","debounceValue","width","height","scrollHeight","scrollWidth","resize","onWrapperResize","onContentResize","Window","window","innerWidth","innerHeight","clientWidth","clientHeight","debouncedResize","callback","delay","timer","args","context","clearTimeout","setTimeout","undefined","apply","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","disconnect","_b","removeEventListener","limit","Emitter","events","emit","event","callbacks","i","length","on","cb","push","filter","off","LINE_HEIGHT","listenerOptions","passive","VirtualScroll","element","options","wheelMultiplier","touchMultiplier","touchStart","lastDelta","emitter","onTouchStart","clientX","clientY","targetTouches","deltaX","deltaY","onTouchMove","onTouchEnd","onWheel","deltaMode","onWindowResize","Lenis","document","documentElement","eventsTarget","smoothWheel","syncTouch","syncTouchLerp","touchInertiaMultiplier","pow","infinite","orientation","gestureOrientation","prevent","virtualScroll","__experimental__naiveDimensions","_isScrolling","_isStopped","_isLocked","_preventNextNativeScrollEvent","_resetVelocityTimeout","time","userData","lastVelocity","velocity","direction","animate","onPointerDown","button","reset","onVirtualScroll","data","ctrlKey","isTouch","type","includes","isWheel","isTouching","isStopped","isLocked","isClick","isUnknownGesture","composedPath","slice","indexOf","rootElement","find","node","HTMLElement","hasAttribute","_c","classList","_d","contains","_e","preventDefault","isScrolling","delta","abs","hasTouchInertia","scrollTo","targetScroll","Object","assign","programmatic","onNativeScroll","lastScroll","animatedScroll","actualScroll","sign","lenisVersion","body","dimensions","updateClassName","cleanUpClassName","setScroll","scroll","isHorizontal","scrollLeft","scrollTop","start","raf","target","offset","immediate","lock","onComplete","force","querySelector","nodeType","wrapperRect","getBoundingClientRect","left","top","rect","preventNextNativeScrollEvent","requestAnimationFrame","modulo","n","d","progress","isSmooth","className","trim","replace"],"mappings":"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"}