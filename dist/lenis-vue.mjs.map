{"version":3,"file":"lenis-vue.mjs","sources":["../src/component.vue","../src/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport Tempus from '@darkroom.engineering/tempus'\nimport Lenis from 'lenis'\nimport { onBeforeUnmount, onMounted, provide, ref, shallowRef } from 'vue'\n\nconst { root, instance, options } = defineProps({\n  root: {\n    type: Boolean,\n    default: () => false,\n  },\n  instance: { type: String },\n  options: {\n    type: Object,\n    default: () => {},\n  },\n})\n\nconst lenis = shallowRef<Lenis>()\nconst wrapper = ref<HTMLDivElement>()\nconst content = ref<HTMLDivElement>()\nconst removeRaf = ref<(() => void) | undefined>()\n\n// Provide instance for useLenis composable\nconst instanceKey = `lenis${instance ? `-${instance}` : ''}`\nprovide(instanceKey, lenis)\n\n// Initialize with Tempus\nfunction initLenis() {\n  if (lenis.value) return\n\n  lenis.value = new Lenis({\n    ...options,\n    ...(!root\n      ? {\n          wrapper: wrapper.value,\n          content: content.value,\n          eventsTarget: wrapper.value,\n        }\n      : {}),\n  })\n\n  removeRaf.value = Tempus.add((time: number) => {\n    lenis.value!.raf(time)\n  })\n}\n\nonMounted(() => {\n  if (!lenis.value && root) {\n    initLenis()\n  }\n})\n\n// Kill lenis before unmount\nonBeforeUnmount(() => {\n  lenis.value?.destroy()\n  removeRaf.value?.()\n})\n</script>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nexport default defineComponent({\n  name: 'lenis',\n})\n</script>\n\n<template>\n  <div v-if=\"!root\" class=\"lenis\" ref=\"wrapper\">\n    <div ref=\"content\">\n      <slot />\n    </div>\n  </div>\n  <slot v-else />\n</template>\n","import type { App, Plugin } from 'vue'\nimport LenisVue from './component.vue'\n\ntype SFCWithInstall<T> = T & Plugin\n\nconst withInstall = <T>(comp: T) => {\n  ;(comp as SFCWithInstall<T>).install = (app: App) => {\n    const name = (comp as any).name\n    app.component(name, comp as SFCWithInstall<T>)\n  }\n  return comp as SFCWithInstall<T>\n}\n\nexport default withInstall(LenisVue)\n// export { LenisVue, useLenis }\n"],"names":["__default__","defineComponent","root","instance","options","__props","lenis","shallowRef","wrapper","ref","content","removeRaf","instanceKey","provide","initLenis","Lenis","Tempus","time","onMounted","onBeforeUnmount","_a","_b","withInstall","comp","app","name","index","LenisVue"],"mappings":";;;AA4DA,MAAAA,IAAeC,EAAgB;AAAA,EAC7B,MAAM;AACR,CAAC;;;;;;;;;;;;;;;AAzDD,UAAM,EAAE,MAAAC,GAAM,UAAAC,GAAU,SAAAC,EAAA,IAAYC,GAY9BC,IAAQC,KACRC,IAAUC,KACVC,IAAUD,KACVE,IAAYF,KAGZG,IAAc,QAAQT,IAAW,IAAIA,CAAQ,KAAK,EAAE;AAC1D,IAAAU,EAAQD,GAAaN,CAAK;AAG1B,aAASQ,IAAY;AACnB,MAAIR,EAAM,UAEJA,EAAA,QAAQ,IAAIS,EAAM;AAAA,QACtB,GAAGX;AAAA,QACH,GAAKF,IAMD,CAAC,IALD;AAAA,UACE,SAASM,EAAQ;AAAA,UACjB,SAASE,EAAQ;AAAA,UACjB,cAAcF,EAAQ;AAAA,QAAA;AAAA,MAEvB,CACN,GAEDG,EAAU,QAAQK,EAAO,IAAI,CAACC,MAAiB;AACvC,QAAAX,EAAA,MAAO,IAAIW,CAAI;AAAA,MAAA,CACtB;AAAA,IACH;AAEA,WAAAC,EAAU,MAAM;AACV,MAAA,CAACZ,EAAM,SAASJ,KACRY;IACZ,CACD,GAGDK,EAAgB,MAAM;;AACpB,OAAAC,IAAAd,EAAM,UAAN,QAAAc,EAAa,YACbC,IAAAV,EAAU,UAAV,QAAAU,EAAA,KAAAV;AAAA,IAAkB,CACnB;;;;;;;;;;;;;;ICnDKW,IAAc,CAAIC,OACpBA,EAA2B,UAAU,CAACC,MAAa;AACnD,QAAMC,IAAQF,EAAa;AACvB,EAAAC,EAAA,UAAUC,GAAMF,CAAyB;AAAA,GAExCA,IAGMG,IAAAJ,EAAYK,CAAQ;"}