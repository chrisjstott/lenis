{"version":3,"sources":["../packages/vue/src/provider.ts","../packages/vue/src/use-lenis.ts"],"sourcesContent":["import Lenis from 'lenis'\nimport type {\n  HTMLAttributes,\n  InjectionKey,\n  Plugin,\n  PropType,\n  ShallowRef,\n} from 'vue'\nimport {\n  defineComponent,\n  getCurrentInstance,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport type { LenisVueProps } from './types'\n\nexport const LenisSymbol: InjectionKey<ShallowRef<Lenis | undefined> | null> =\n  Symbol('LenisContext')\n\nexport const VueLenis = defineComponent({\n  name: 'VueLenis',\n  props: {\n    root: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n    },\n    autoRaf: {\n      type: Boolean as PropType<boolean>,\n      default: true,\n    },\n    options: {\n      type: Object as PropType<ConstructorParameters<typeof Lenis>[0]>,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<HTMLAttributes>,\n      default: () => ({}),\n    },\n  },\n  setup(props: LenisVueProps, { slots }) {\n    const lenisRef = shallowRef<Lenis>()\n    const wrapper = ref<HTMLDivElement>()\n    const content = ref<HTMLDivElement>()\n\n    onMounted(() => {\n      lenisRef.value = new Lenis({\n        ...props.options,\n        ...(!props.root\n          ? {\n              wrapper: wrapper.value,\n              content: content.value,\n            }\n          : {}),\n      })\n\n      if (props.autoRaf) {\n        function raf(time: number) {\n          lenisRef.value?.raf(time)\n          requestAnimationFrame(raf)\n        }\n\n        requestAnimationFrame(raf)\n      }\n    })\n\n    onBeforeUnmount(() => {\n      lenisRef.value?.destroy()\n    })\n\n    if (props.root) {\n      // Provide a null value to not get the empty injection warning\n      provide(LenisSymbol, null)\n    } else {\n      provide(LenisSymbol, lenisRef)\n    }\n\n    const app = getCurrentInstance()\n\n    watch([lenisRef, props], ([lenis, props]) => {\n      if (props.root) {\n        if (!app) throw new Error('No app found')\n        app.appContext.config.globalProperties.$lenis.value = lenis\n      }\n    })\n\n    watch(props, (props, oldProps) => {\n      const rootChanged = oldProps.root !== props.root\n      const optionsChanged =\n        JSON.stringify(oldProps.options) !== JSON.stringify(props.options)\n\n      if (rootChanged || optionsChanged) {\n        lenisRef.value?.destroy()\n        lenisRef.value = new Lenis({\n          ...props.options,\n          ...(!props.root\n            ? {\n                wrapper: wrapper.value,\n                content: content.value,\n              }\n            : {}),\n        })\n      }\n    })\n\n    return () => {\n      if (props.root) {\n        return slots.default?.()\n      } else {\n        const combinedClassName = ['lenis', props.props?.class]\n          .filter(Boolean)\n          .join(' ')\n        delete props.props?.class\n\n        return h('div', { class: combinedClassName, ref: wrapper, ...props }, [\n          h('div', { ref: content }, slots.default?.()),\n        ])\n      }\n    }\n  },\n})\n\nexport const vueLenisPlugin: Plugin = (app) => {\n  app.component('lenis', VueLenis)\n  // Setup a global provide to silence top level useLenis injection warning\n  app.provide(LenisSymbol, null)\n  app.config.globalProperties.$lenis = shallowRef<Lenis>()\n}\n","import type { ScrollCallback } from 'lenis'\nimport {\n  getCurrentInstance,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  watch,\n} from 'vue'\nimport { LenisSymbol } from './provider'\n\nexport function useLenis(callback?: ScrollCallback) {\n  const lenisInjection = inject(LenisSymbol)\n  const app = getCurrentInstance()\n\n  const lenis = lenisInjection || app?.appContext.config.globalProperties.$lenis\n\n  // Wait two ticks to make sure the lenis instance is mounted\n  nextTick(() => {\n    nextTick(() => {\n      if (!lenis.value) {\n        throw new Error(\n          'No lenis instance found, either mount a root lenis instance or wrap your component in a lenis provider'\n        )\n      }\n    })\n  })\n\n  watch(lenis, (lenis) => {\n    if (callback) {\n      lenis?.on('scroll', callback)\n    }\n  })\n\n  onBeforeUnmount(() => {\n    if (callback) {\n      lenis.value?.off('scroll', callback)\n    }\n  })\n\n  return lenis\n}\n"],"mappings":"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","names":["raf","props","getCurrentInstance","onBeforeUnmount","watch","getCurrentInstance","watch","lenis","onBeforeUnmount"]}