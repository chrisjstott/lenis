{"version":3,"sources":["../packages/vue/src/provider.ts","../packages/vue/src/use-lenis.ts"],"sourcesContent":["import Tempus from '@darkroom.engineering/tempus'\nimport Lenis, { type ScrollCallback } from 'lenis'\nimport type { HTMLAttributes, InjectionKey, Plugin, PropType } from 'vue'\nimport {\n  defineComponent,\n  getCurrentInstance,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport type { LenisContextValue } from './types'\n\nexport const LenisSymbol: InjectionKey<LenisContextValue | null> =\n  Symbol('LenisContext')\n\nexport const VueLenis = defineComponent({\n  name: 'VueLenis',\n  props: {\n    root: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n    },\n    autoRaf: {\n      type: Boolean as PropType<boolean>,\n      default: true,\n    },\n    rafPriority: {\n      type: Number as PropType<number>,\n      default: 0,\n    },\n    options: {\n      type: Object as PropType<ConstructorParameters<typeof Lenis>[0]>,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<HTMLAttributes>,\n      default: () => ({}),\n    },\n  },\n  setup(props, { slots }) {\n    const lenisRef = shallowRef<Lenis | null>(null)\n    const tempusCleanupRef = shallowRef<() => void>()\n    const wrapper = ref<HTMLDivElement>()\n    const content = ref<HTMLDivElement>()\n\n    // Setup the lenis instance when the component is mounted\n    onMounted(() => {\n      lenisRef.value = new Lenis({\n        ...props.options,\n        ...(!props.root\n          ? {\n              wrapper: wrapper.value,\n              content: content.value,\n            }\n          : {}),\n      })\n    })\n\n    // Destroy the lenis instance when the component is unmounted\n    onBeforeUnmount(() => {\n      lenisRef.value?.destroy()\n      lenisRef.value = null\n    })\n\n    // Sync options\n    watch(\n      () => props.options,\n      (options, oldOptions) => {\n        const optionsChanged =\n          JSON.stringify(oldOptions) !== JSON.stringify(options)\n\n        // If any of the options changed, destroy the lenis instance and create a new one\n        if (optionsChanged) {\n          lenisRef.value?.destroy()\n          lenisRef.value = new Lenis({\n            ...props.options,\n            ...(!props.root\n              ? {\n                  wrapper: wrapper.value,\n                  content: content.value,\n                }\n              : {}),\n          })\n        }\n      },\n      { deep: true }\n    )\n\n    // Sync autoRaf\n    watch(\n      [lenisRef, () => props.autoRaf, () => props.rafPriority],\n      ([lenis, autoRaf, rafPriority]) => {\n        if (!lenis || !autoRaf) {\n          // If lenis is not defined or autoRaf is false, stop the raf if there is one\n          return tempusCleanupRef.value?.()\n        }\n\n        // If either lenis, autoRaf or rafPriority changed, stop the raf if there is one and start a new one\n        tempusCleanupRef.value?.()\n        if (autoRaf) {\n          tempusCleanupRef.value = Tempus.add(\n            (time: number) => lenis?.raf(time),\n            rafPriority\n          )\n        }\n      }\n    )\n\n    const callbacks = reactive<\n      { callback: ScrollCallback; priority: number }[]\n    >([])\n\n    function addCallback(callback: ScrollCallback, priority: number) {\n      callbacks.push({ callback, priority })\n      callbacks.sort((a, b) => a.priority - b.priority)\n    }\n\n    function removeCallback(callback: ScrollCallback) {\n      callbacks.splice(\n        callbacks.findIndex((cb) => cb.callback === callback),\n        1\n      )\n    }\n\n    const onScroll: ScrollCallback = (data) => {\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i]?.callback(data)\n      }\n    }\n\n    // Sync global lenis instance\n    const app = getCurrentInstance()\n\n    watch(lenisRef, (lenis) => {\n      lenis?.on('scroll', onScroll)\n\n      if (props.root) {\n        if (!app) throw new Error('No app found')\n        app.appContext.config.globalProperties.$lenisContext.lenis.value = lenis\n      }\n    })\n\n    if (props.root) {\n      // Provide a null value to not get the empty injection warning\n      provide(LenisSymbol, null)\n      if (!app) throw new Error('No app found')\n\n      app.appContext.config.globalProperties.$lenisContext.addCallback.value =\n        addCallback\n      app.appContext.config.globalProperties.$lenisContext.removeCallback.value =\n        removeCallback\n    } else {\n      provide(LenisSymbol, {\n        lenis: lenisRef,\n        addCallback: shallowRef(addCallback),\n        removeCallback: shallowRef(removeCallback),\n      })\n    }\n\n    return () => {\n      if (props.root) {\n        return slots.default?.()\n      } else {\n        const combinedClassName = ['lenis', props.props?.class]\n          .filter(Boolean)\n          .join(' ')\n        delete props.props?.class\n\n        return h('div', { class: combinedClassName, ref: wrapper, ...props }, [\n          h('div', { ref: content }, slots.default?.()),\n        ])\n      }\n    }\n  },\n})\n\nexport const vueLenisPlugin: Plugin = (app) => {\n  app.component('lenis', VueLenis)\n  // Setup a global provide to silence top level useLenis injection warning\n  app.provide(LenisSymbol, null)\n  app.config.globalProperties.$lenisContext = {\n    lenis: shallowRef(null),\n    addCallback: shallowRef(null),\n    removeCallback: shallowRef(null),\n  }\n}\n","import type { ScrollCallback } from 'lenis'\nimport {\n  getCurrentInstance,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  watch,\n} from 'vue'\nimport { LenisSymbol } from './provider'\nimport type { LenisContextValue } from './types'\n\nexport function useLenis(\n  callback?: ScrollCallback,\n  priority = 0,\n  log = 'useLenis'\n) {\n  const lenisInjection = inject(LenisSymbol)\n  const app = getCurrentInstance()\n\n  const context =\n    lenisInjection ||\n    (app?.appContext.config.globalProperties.$lenisContext as LenisContextValue)\n\n  // watch(\n  //   () => context.lenis,\n  //   (context) => {\n  //     console.log(context, log)\n  //   },\n  //   { deep: true }\n  // )\n\n  // Wait two ticks to make sure the lenis instance is mounted\n  nextTick(() => {\n    nextTick(() => {\n      if (!context.lenis.value) {\n        throw new Error(\n          'No lenis instance found, either mount a root lenis instance or wrap your component in a lenis provider'\n        )\n      }\n    })\n  })\n\n  watch(\n    [context.lenis, context.addCallback, context.removeCallback],\n    ([lenis, addCallback, removeCallback]) => {\n      console.log(lenis, addCallback, removeCallback, callback, log)\n      if (!lenis || !addCallback || !removeCallback || !callback) return\n      removeCallback?.(callback)\n\n      addCallback?.(callback, priority)\n      callback?.(lenis)\n    },\n    { deep: true }\n  )\n\n  onBeforeUnmount(() => {\n    if (!context.removeCallback || !callback) return\n    context.removeCallback.value?.(callback)\n  })\n\n  return context.lenis\n}\n"],"mappings":"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","names":["getCurrentInstance","onBeforeUnmount","watch","getCurrentInstance","watch","onBeforeUnmount"]}